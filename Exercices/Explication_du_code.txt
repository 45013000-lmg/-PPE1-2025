#!/usr/bin/bash

if [ $# -ne 1 ]        #V√©rifie qu‚Äôun seul argument (le nom du fichier) a √©t√© fourni, sinon le programme s‚Äôarr√™te.
then
  echo "ce programme demande un argument"
    exit
fi

FICHIER_URLS=$1
OK=0
NOK=0                 #Initialise les compteurs pour les lignes valides et non valides.

while read -r LINE;   #Commence une boucle pour lire le fichier ligne par ligne.
do
    echo "la ligne: $LINE"   #Affiche la ligne lue actuellement.
    if [[ $LINE =~ ^https?:// ]]   #V√©rifie si la ligne ressemble √† une URL (commen√ßant par http ou https).
    then
      echo "ressemble √† une URL valide"   #Si la ligne correspond, elle est consid√©r√©e comme une URL valide.
      OK=$(expr $OK + 1)
    else
      echo "ne ressemble pas √† une URL valide"  #Sinon, la ligne est consid√©r√©e comme douteuse (non valide).
      NOK=$(expr $NOK + 1)
    fi
done < $FICHIER_URLS   #Fin de la boucle : lit toutes les lignes du fichier.
echo "$OK URLs et $NOK lignes douteuses"  #Affiche le nombre d‚ÄôURLs valides et de lignes douteuses.

#Ce script sert √† : üëâ lire chaque ligne d‚Äôun fichier texte et v√©rifier si elle correspond √† une URL valide (commen√ßant par http:// ou https://).
√Ä la fin, il affiche combien de lignes sont valides et combien sont douteuses.
